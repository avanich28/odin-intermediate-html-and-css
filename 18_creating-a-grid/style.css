.container {
  display: grid;
  /* grid-template-columns: 50px 50px 50px;
  grid-template-rows: 50px 50px; */

  /* short-hand (row/column) */
  /* grid-template: 50px 50px / 50px 50px 50px; */
  grid-template: 50px 50px / 250px 50px 50px;
}

/* Explicit vs Implicit Grid */
.container-2 {
  display: grid;
  grid-template-columns: 50px 50px;
  /* did not define 3rd row */
  /* Item 5 -> implicit grid */
  grid-template-rows: 50px 50px;
}

/* When we use the grid-template-columns and grid-template-rows properties, we are explicitly defining grid tracks to lay out our grid items. */

/* Set the implicit grid track sizes */
/* grid-auto-rows / grid-auto-columns */
.container-3 {
  display: grid;
  grid-template-columns: 50px 50px;
  grid-template-rows: 50px 50px;
  grid-auto-rows: 50px;
}

/* grid-auto-flow: column + grid-auto-columns -> add content horizontally + track size */

/* Gap  - gutter */
/* column-gap / row-gap */
/* gap: row-gap column-gap */
.container-4 {
  display: grid;
  grid-template-columns: [left] 50px [middle] 50px [right];
  grid-template-rows: 50px 50px;
  /* column-gap: 10px;
  row-gap: 100px; */
  gap: 50px 10px;
}

.container-4 > div {
  border: 1px solid blue;
  /* grid-column: left / right; */
}

/* mdn */

/* repeat */
.wrapper {
  display: grid;
  /* grid-template-columns: 1fr 1fr 1fr; */
  /* grid-template-columns: repeat(3, 1fr) */
  /* grid-template-columns: 20px repeat(6, 1fr) 20px; */

  /* 8 tracks */
  grid-template-columns: repeat(4, 1fr 2fr);
  grid-template-rows: 25px;

  /* sets track size on the implicit grid */
  grid-auto-rows: 50px;
}

.wrapper > div {
  border: 1px solid darkred;
}

/* minmax() */
.wrapper-2 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(50px, auto);
}

.wrapper-2 > div {
  border: 2px solid rgb(251, 200, 96);
}

/* grid-column-start / grid-column-end */
/* grid-row-start / grid-row-end */
.wrapper-3 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 50px;
}

.wrapper-3 > div {
  border: 2px solid rgb(102, 123, 85);
}

.box1 {
  /* count from grid line ðŸ”¥, not track */
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 3;
}

.box2 {
  /* grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 3;
  grid-row-end: 5; */

  /* short hand */
  grid-column: 1 / 3;
  grid-row: 3 / 5;
}

/* gap, column-gap, row-gap / grid-column-gap */
.wrapper-4 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: 10px;
  row-gap: 1em;
}

.wrapper-4 > div {
  border: 2px solid rgb(174, 97, 97);
}

/* Nesting without subgrid */
* {
  box-sizing: border-box;
}

.wrapper-5 {
  border: 2px solid #f76707;
  border-radius: 5px;
  background-color: #fff4e6;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 3px;
}

.box {
  border: 2px solid #ffa94d;
  border-radius: 5px;
  background-color: #ffd8a8;
  padding: 1em;
  color: #d9480f;
}

.box11 {
  grid-column: 1 / 4;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}

.nested {
  /* has not inherited the gap of the parent */
  border: 2px solid #ffec99;
  border-radius: 5px;
  background-color: #fff9db;
  padding: 1em;
}

/* subgrid */
/* creates nested grids from the track of the parent grid  */
.box11 {
  /* inherited the gap of the parent */
  grid-column: 1 / 4;
  grid-row: 1 / 3;
  display: grid;
  grid-template-columns: subgrid;
}

/* Overlapping without z-index */
.wrapper-6 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 100px;
}

.box111 {
  grid-column: 1 / 4;
  grid-row: 1 / 3;
}

.box222 {
  grid-column: 1;
  /* box222 overlaps box111 */
  grid-row: 2 / 4;
}

/* z-index */
.box333 {
  grid-column: 2;
  grid-row: 2 / 4;
  /* box111 overlaps box333 */
  z-index: -1;
}
